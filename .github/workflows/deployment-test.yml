name: Carbol SL Test Deployment...
on:
  push:
    branches:
      - develop
    paths:
      - web/**
      - backend/**
      - .github/workflows/deployment*
      - docker-compose*

# AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
# AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
# AWS_DEFAULT_REGION: us-east-1
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy_frontend:
    name: Carbon SL Registry Frontend Deploy
    runs-on: ubuntu-latest
    env:
      # REACT_APP_BACKEND: https://ck5kt5uaw1.execute-api.us-east-1.amazonaws.com/dev
      COUNTRY_NAME: 'Sri Lanka'
      COUNTRY_FLAG_URL: 'https://carbon-common-dev.s3.amazonaws.com/flag.png'
      COUNTRY_CODE: 'LK'
      REACT_APP_MAPBOXGL_ACCESS_TOKEN: ${{ secrets.MAPBOXGL_ACCESS_TOKEN }}
      REACT_APP_MAP_TYPE : "Mapbox"
      REACT_APP_GOVERNMENT_MINISTRY: "Ministry Of Environment"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 5
      - name: Check Docker variable changes
        run: |
          echo "docker-compose file Change...."
          git diff HEAD~ -- HEAD -z ./docker-compose*
      - name: Cache modules
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # - name: Install dependencies
      #   working-directory: ./web
      #   run: CI=false yarn install 
      # - name: Build
      #   working-directory: ./web
      #   run: CI=false yarn build
      # - name: Deploy
      #   run: aws s3 sync ./web/build s3://carbon-www-dev
      # - name: Deploy Test
      #   run: aws s3 sync ./web/build s3://www-test-carbon 
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      # - name: Build, tag, and push the image to Amazon ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: carbon-web
      #     IMAGE_TAG: unified
      #   run: |
      #     # Build a docker container and push it to ECR 
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f web/Dockerfile . --build-arg PORT=3030 --build-arg REACT_APP_BACKEND=http://3.232.219.197:3000 --build-arg REACT_APP_STAT_URL=http://3.232.219.197:3100 --build-arg COUNTRY_NAME="CountryX" --build-arg COUNTRY_FLAG_URL="https://carbon-common-dev.s3.amazonaws.com/flag.png" --build-arg COUNTRY_CODE="NG" --build-arg REACT_APP_MAP_TYPE="Mapbox" --build-arg REACT_APP_MAPBOXGL_ACCESS_TOKEN=${{ secrets.MAPBOXGL_ACCESS_TOKEN }} 
      #     echo "Pushing image to ECR...."
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: carbon-web-sl
          IMAGE_TAG: ${{ github.head_ref || github.ref_name }} 
        run: |
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f web/Dockerfile . --build-arg PORT=3030 --build-arg REACT_APP_BACKEND=http://localhost:3000 --build-arg REACT_APP_STAT_URL=http://localhost:3100 --build-arg REACT_APP_COUNTRY_NAME="Sri Lanka" --build-arg REACT_APP_COUNTRY_FLAG_URL="https://carbonsl-demo-file-uploads.s3.us-east-1.amazonaws.com/sri-lanka-flag.svg" --build-arg COUNTRY_CODE="LK" --build-arg REACT_APP_MAP_TYPE="Mapbox" --build-arg REACT_APP_GOVERNMENT_MINISTRY="Ministry Of Environment" --build-arg REACT_APP_MAPBOXGL_ACCESS_TOKEN=${{ secrets.MAPBOXGL_ACCESS_TOKEN }}
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Deploy docker image to Amazon EC2
        if: github.ref == 'refs/heads/develop'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: carbon-web-sl
          IMAGE_TAG: ${{ github.head_ref || github.ref_name }}
          PRIVATE_KEY: ${{ secrets.AWS_SSH_KEY_PRIVATE_TEST }}
          HOSTNAME: ${{secrets.HOST_IP_TEST }}
          USER_NAME: ec2-user
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            carbon-sl/sl_frontend_deploy.sh '

  deploy_backend:
    name: Carbon SL Registry Backend Deploy 
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-'dev'
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 5
      - name: Check Docker variable changes
        run: |
          echo "docker-compose file Change...."
          git diff HEAD~ -- HEAD -z ./docker-compose*
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push the development image to Amazon ECR
        if: github.ref == 'refs/heads/develop'
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: carbon-services-sl
          IMAGE_TAG: ${{ github.head_ref || github.ref_name }} 
        run: |
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f backend/services/Dockerfile .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Deploy development docker image to Amazon EC2
        if: github.ref == 'refs/heads/develop'
        env:
          PRIVATE_KEY: ${{ secrets.AWS_SSH_KEY_PRIVATE_TEST }}
          HOSTNAME: ${{secrets.HOST_IP_TEST }}
          USER_NAME: ec2-user
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            carbon-sl/sl_backend_deploy.sh '